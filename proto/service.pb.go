// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GreetType int32

const (
	GreetType_Hello       GreetType = 0
	GreetType_Hi          GreetType = 1
	GreetType_GoodMorning GreetType = 2
	GreetType_GoodEvening GreetType = 3
)

var GreetType_name = map[int32]string{
	0: "Hello",
	1: "Hi",
	2: "GoodMorning",
	3: "GoodEvening",
}

var GreetType_value = map[string]int32{
	"Hello":       0,
	"Hi":          1,
	"GoodMorning": 2,
	"GoodEvening": 3,
}

func (x GreetType) String() string {
	return proto.EnumName(GreetType_name, int32(x))
}

func (GreetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{0}
}

type GreetRequest struct {
	Type                 GreetType `protobuf:"varint,1,opt,name=type,proto3,enum=GreetType" json:"type,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GreetRequest) Reset()         { *m = GreetRequest{} }
func (m *GreetRequest) String() string { return proto.CompactTextString(m) }
func (*GreetRequest) ProtoMessage()    {}
func (*GreetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{0}
}

func (m *GreetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetRequest.Unmarshal(m, b)
}
func (m *GreetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetRequest.Marshal(b, m, deterministic)
}
func (m *GreetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetRequest.Merge(m, src)
}
func (m *GreetRequest) XXX_Size() int {
	return xxx_messageInfo_GreetRequest.Size(m)
}
func (m *GreetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GreetRequest proto.InternalMessageInfo

func (m *GreetRequest) GetType() GreetType {
	if m != nil {
		return m.Type
	}
	return GreetType_Hello
}

func (m *GreetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GreetResponse struct {
	Greeting             string   `protobuf:"bytes,1,opt,name=greeting,proto3" json:"greeting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetResponse) Reset()         { *m = GreetResponse{} }
func (m *GreetResponse) String() string { return proto.CompactTextString(m) }
func (*GreetResponse) ProtoMessage()    {}
func (*GreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c33392ef2c1961ba, []int{1}
}

func (m *GreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponse.Unmarshal(m, b)
}
func (m *GreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponse.Marshal(b, m, deterministic)
}
func (m *GreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponse.Merge(m, src)
}
func (m *GreetResponse) XXX_Size() int {
	return xxx_messageInfo_GreetResponse.Size(m)
}
func (m *GreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponse proto.InternalMessageInfo

func (m *GreetResponse) GetGreeting() string {
	if m != nil {
		return m.Greeting
	}
	return ""
}

func init() {
	proto.RegisterEnum("GreetType", GreetType_name, GreetType_value)
	proto.RegisterType((*GreetRequest)(nil), "GreetRequest")
	proto.RegisterType((*GreetResponse)(nil), "GreetResponse")
}

func init() {
	proto.RegisterFile("proto/service.proto", fileDescriptor_c33392ef2c1961ba)
}

var fileDescriptor_c33392ef2c1961ba = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0x4d, 0xdd, 0xee, 0x9a, 0xd1, 0x5d, 0xcb, 0x78, 0x59, 0xf6, 0x20, 0x4b, 0x0f, 0x52,
	0x14, 0x22, 0xd6, 0x2f, 0x20, 0x05, 0x69, 0x2f, 0x5e, 0x82, 0x27, 0x6f, 0xfe, 0x19, 0x4a, 0xa0,
	0x26, 0x31, 0x89, 0x85, 0x7e, 0x7b, 0x71, 0xd0, 0xa2, 0xa7, 0xbc, 0xf7, 0x0b, 0xfc, 0x98, 0x07,
	0x67, 0x3e, 0xb8, 0xe4, 0xae, 0x23, 0x85, 0xd1, 0xbc, 0x92, 0xe2, 0x56, 0x36, 0x70, 0xd2, 0x06,
	0xa2, 0xa4, 0xe9, 0xe3, 0x93, 0x62, 0xc2, 0x73, 0x58, 0xa4, 0xc9, 0xd3, 0x56, 0xec, 0x45, 0xb5,
	0xa9, 0x41, 0xf1, 0xe7, 0xe3, 0xe4, 0x49, 0x33, 0x47, 0x84, 0x85, 0x7d, 0x7e, 0xa7, 0x6d, 0xb6,
	0x17, 0x95, 0xd4, 0x9c, 0xcb, 0x2b, 0x58, 0xff, 0x38, 0xa2, 0x77, 0x36, 0x12, 0xee, 0xe0, 0xa8,
	0xff, 0x06, 0xc6, 0xf6, 0x2c, 0x92, 0x7a, 0xee, 0x97, 0x77, 0x20, 0x67, 0x27, 0x4a, 0xc8, 0x3b,
	0x1a, 0x06, 0x57, 0x1c, 0xe0, 0x12, 0xb2, 0xce, 0x14, 0x02, 0x4f, 0xe1, 0xb8, 0x75, 0xee, 0xed,
	0xc1, 0x05, 0x6b, 0x6c, 0x5f, 0x64, 0xbf, 0xe0, 0x7e, 0x24, 0x06, 0x87, 0xf5, 0x0d, 0xac, 0xd8,
	0x40, 0x01, 0x2f, 0x20, 0xe7, 0x88, 0x6b, 0xf5, 0x77, 0xc5, 0x6e, 0xa3, 0xfe, 0x1d, 0xd4, 0xac,
	0x9e, 0x72, 0x9e, 0xfb, 0xb2, 0xe4, 0xe7, 0xf6, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x79, 0x2e, 0x6e,
	0x69, 0x0c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) Greet(ctx context.Context, in *GreetRequest, opts ...grpc.CallOption) (*GreetResponse, error) {
	out := new(GreetResponse)
	err := c.cc.Invoke(ctx, "/Greeter/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	Greet(context.Context, *GreetRequest) (*GreetResponse, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) Greet(ctx context.Context, req *GreetRequest) (*GreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Greet not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Greeter/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).Greet(ctx, req.(*GreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _Greeter_Greet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/service.proto",
}
